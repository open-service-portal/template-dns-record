---
# Composite Resource Definition (XRD)
# Using Crossplane v2 with namespaced XRs (no claims needed)
apiVersion: apiextensions.crossplane.io/v2
kind: CompositeResourceDefinition
metadata:
  name: xdnsrecords.platform.io
  annotations:
    crossplane.io/version: "v2.0"
spec:
  scope: Namespaced  # XRs can be created directly in namespaces
  group: platform.io
  names:
    kind: XDNSRecord
    plural: xdnsrecords
  # No claimNames section - developers create XDNSRecord directly
  defaultCompositionRef:
    name: dnsrecord
  versions:
    - name: v1alpha1
      served: true
      referenceable: true
      schema:
        openAPIV3Schema:
          type: object
          required:
            - spec
          properties:
            spec:
              type: object
              required:
                - type
                - name
                - value
              properties:
                type:
                  type: string
                  description: "DNS record type"
                  enum:
                    - A
                    - AAAA
                    - CNAME
                    - TXT
                  example: "A"
                name:
                  type: string
                  description: "DNS record name (subdomain)"
                  minLength: 1
                  maxLength: 63
                  example: my-app
                  pattern: '^[a-z]([-a-z0-9]*[a-z0-9])?(\.[a-z]([-a-z0-9]*[a-z0-9])?)*$'
                value:
                  type: string
                  description: "DNS record value (IP address, hostname, or text)"
                  example: "192.168.1.100"
                ttl:
                  type: integer
                  description: "Time to live in seconds"
                  default: 300
                  minimum: 60
                  maximum: 86400
                # Crossplane v2 machinery under spec.crossplane
                crossplane:
                  type: object
                  description: "Crossplane-specific configuration"
                  properties:
                    compositionRef:
                      type: object
                      description: "Reference to the composition to use"
                      properties:
                        name:
                          type: string
                          description: "Name of the composition"
                    compositionSelector:
                      type: object
                      description: "Select which composition to use"
                      properties:
                        matchLabels:
                          type: object
                          additionalProperties:
                            type: string
            # Status field for returning computed values
            status:
              type: object
              properties:
                fqdn:
                  type: string
                  description: "Fully qualified domain name"
                  example: "my-app.portal.example.com"
                conditions:
                  type: array
                  items:
                    type: object
                    properties:
                      type:
                        type: string
                      status:
                        type: string
                      reason:
                        type: string
                      message:
                        type: string
                      lastTransitionTime:
                        type: string
                        format: date-time